[project]
name = "lmms-owc"
description = "On Large Multimodal Models as Open-World Image Classifiers"
version = "0.0.1"
readme = "README.md"
requires-python = ">=3.12,<3.13"
license = {file = "LICENCE"}
authors = [{name = "Alessandro Conti", email = "alessandro.conti.97@gmail.com"}]
classifiers = [
  "Development Status :: 1 - Planning",
  "Environment :: GPU :: NVIDIA CUDA",
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: Unix",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Scientific/Engineering :: Image Processing",
  "Topic :: Scientific/Engineering :: Image Recognition",
  "Topic :: Scientific/Engineering :: Information Analysis",
]

dependencies = [
  "accelerate>=1,<2",
  "bitsandbytes>=0,<1",
  "colorlog>=6,<7",
  "datasets>=3,<4",
  "einops>=0,<1",
  "gdown>=5,<6",
  "llava@git+https://github.com/LLaVA-VL/LLaVA-NeXT.git@79ef45a",
  "openai>=1,<3",
  "pip>=25,<26",
  "pytablewriter>=1,<2",
  "python-dotenv>=1,<2",
  "qwen_vl_utils>=0,<1",
  "sacrebleu>=2,<3",
  "scikit-learn>=1,<2",
  "sentencepiece>=0.2.0",
  "spacy>=3,<4",
  "tenacity>=9,<10",
  "timm>=1.0.13",
  "transformers>=4,<5",
  "torch>=2,<3",
  "torchvision>=0,<1",
  "wandb>=0,<1",
  "xformers>=0.0.29.post1",
]

[dependency-groups]
data = [
  "datasets>=3,<4",
  "gdown>=5,<6",
  "openai>=1,<3",
  "pytablewriter>=1,<2",
  "sacrebleu>=2,<3",
  "scikit-learn>=1,<2",
  "spacy>=3,<4",
  "tenacity>=9,<10",
  "wandb>=0,<1",
]
models = [
  "accelerate>=1,<2",
  "bitsandbytes>=0,<1",
  "einops>=0,<1",
  "llava@git+https://github.com/LLaVA-VL/LLaVA-NeXT.git@79ef45a",
  "qwen_vl_utils>=0,<1",
  "sentencepiece>=0.2.0",
  "timm>=1.0.13",
  "torchvision>=0,<1",
  "transformers>=4,<5",
  "xformers==0.0.29.post1",
]

[project.optional-dependencies]
dev = ["pre-commit", "pytest", "pytest-asyncio", "pytest-env", "ruff"]
nvidia = ["flash-attn>=2.7.3,<3"]

[project.urls]
Issues = "https://github.com/altndrr/lmms-owc/issues"
Repository = "https://github.com/altndrr/lmms-owc"

[tool.coverage.report]
exclude_lines = [
    "pragma: nocover",
    "raise NotImplementedError",
    "raise NotImplementedError()",
    "if __name__ == .__main__.:",
]

[tool.interrogate]
fail-under = 100
ignore-init-module = true
ignore-init-method = true
ignore-magic = true
ignore-module = true
ignore-nested-functions = true

[tool.pytest.ini_options]
cache_dir = "~/.cache/pytest"
addopts = [
  "--color=yes",
  "--durations=0",
  "--strict-markers",
  "--doctest-modules",
]
filterwarnings = [
  "ignore::DeprecationWarning",
  "ignore::UserWarning",
]
log_cli = "True"
minversion = "6.0"
testpaths = "tests/"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
cache-dir = "~/.cache/ruff"
include = ["notebooks", "src", "tests", "./*.py"]
line-length = 99
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = [
    "F",    # Pyflakes
    "E",    # pycodestyle
    "D",    # pydocstyle
    "I",    # isort
    "UP",   # pyupgrade
    "ANN",  # flake8-annotations
    "S",    # flake8-bandit
    "B",    # flake8-bugbear
    "EXE",  # flake8-executable
    "G",    # flake8-logging-format
    "T20",  # flake9-print
    "SIM",  # flake8-simplify
]
ignore = ["D100", "D104", "D105", "D107", "D203", "D213", "ANN101", "ANN002", "ANN003", "ANN102", "S101"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"src/agents/*.py" = ["UP"]
"*.ipynb" = ["E501", "I", "ANN", "S", "G004", "T20"]
"eval_*.py" = ["T201"]

[tools.setuptools.dynamic]
version = {attr = "src.__version__"}
